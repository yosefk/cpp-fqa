Main page
{}
This is C++ FQA Lite. C++ is a general-purpose programming language, not necessarily suitable for your special purpose. [6.18 FQA] stands for "frequently
questioned answers". This FQA is called
"lite" because it questions the answers found in `<a href="http://www.parashift.com/c++-faq-lite/index.html">C++ FAQ Lite</a>`.

`<h2>Metadata</h2>`

`<ul>
<li><a href="why.html">Purpose</a></li>
<li><a href="defective.html">Defective C++</a> - the summary</li>
<li><a href="disclaimers.html">Disclaimers and excuses</a></li>
<li><a href="faq.html">The FQA FAQ</a> - `Q&A about the FQA itself, not C++`</li>
<li><a href="linking.html">Images for linking to the FQA</a></li>
<li><a href="web-vs-c++.html">`C++ criticism by other people`</a> - send your examples of C++ problems</li>
<li><a href="web-vs-fqa.html">`FQA errors`</a> - send your corrections</li>
<li><a href="changelog.html">Change log</a></li>
<li><a href="http://yosefk.com">E-mail</a></li>
<li><a href="http://yosefk.com/blog">Blog</a></li>
</ul>`

`<h2>C++ Q&amp;A</h2>`

The structure of the Q&A pages corresponds to that of C++ FAQ Lite, and links are given
to the original FAQ answers. Issues on many different scales are discussed. For
a summary of the large-scale problems with C++, see `<a href="defective.html">Defective C++</a>` and
`<a href="picture.html">Big Picture Issues</a>`. A single page version of the Q&A is available `<a href="fqa.html">here</a>`.
 
`<ul>
<li><a href="picture.html">Big Picture Issues</a></li>
<li><a href="class.html">Classes and objects</a></li>
<li><a href="inline.html">Inline functions</a></li>
<li><a href="ref.html">References</a></li>
<li><a href="ctors.html">Constructors</a></li>
<li><a href="dtor.html">Destructors</a></li>
<li><a href="assign.html">Assignment operators</a></li>
<li><a href="operator.html">Operator overloading</a></li>
<li><a href="friend.html">Friends</a></li>
<li><a href="io.html">Input/output via <tt>&lt;iostream&gt;</tt> and <tt>&lt;cstdio&gt;</tt></a></li>
<li><a href="heap.html">Freestore management</a></li>
<li><a href="exceptions.html">Exceptions</a></li>
<li><a href="const.html">Const correctness</a></li>
<li><a href="inheritance-basics.html">Inheritance - basics</a></li>
<li><a href="inheritance-virtual.html">Inheritance - <tt>virtual</tt> functions</a></li>
<li><a href="inheritance-proper.html">Inheritance - proper inheritance and substitutability</a></li>
<li><a href="inheritance-abstract.html">Inheritance - abstract base classes</a></li>
<li><a href="inheritance-mother.html">Inheritance - what your mother never told you</a></li>
<li><a href="inheritance-multiple.html">Inheritance - multiple and <tt>virtual</tt> inheritance</a></li>
<li><a href="mixing.html">How to mix C and C++</a></li>
<li><a href="function.html">Pointers to member functions</a></li>
<li><a href="templates.html">Templates</a></li>
</ul>`

\<!-- 
RG: this closing shitter \` on a new line prevents removal of a 
trailing \<\/p\> in tidy.py 
--\>
